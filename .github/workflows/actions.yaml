name: asynctnt

on: [push]

jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', 'pypy3.10']
        tarantool: ['1.10', '2']
        exclude:
          - os: macos-latest
            tarantool: '1.10'
          - python-version: 'pypy3.10'
            tarantool: '1.10'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Tarantool ${{ matrix.tarantool }}
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            curl -L https://tarantool.io/nTmSHOX/release/${{ matrix.tarantool }}/installer.sh | bash
            sudo apt-get -y install tarantool
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install tarantool
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel coveralls
      - name: Run tests
        run: |
          if [[ "$RUNNER_OS" == "Linux" && ${{ matrix.python-version }} == "3.11" && ${{ matrix.tarantool }} == "2" ]]; then
              make build && make test
              make clean && make debug && make coverage
              # coveralls
          else
              make build && make lint && make quicktest
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"

  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    needs:
      - test

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v4

      - name: Install cibuildwheel
        run: python -m pip install --upgrade cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-* pp310-*"

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  publish:
    name: Publish wheels
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs:
      - build-wheels
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      - run: echo "Current tag is ${{ steps.get_tag.outputs.TAG }}"
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel twine build

      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheels
      - name: Publish dist
        run: |
          python -m build . -s
          tree wheels
          tree dist
          twine upload dist/* wheels/*
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: ${{ steps.get_tag.outputs.TAG }}
          files: |
            wheels/*.whl
            dist/*

  docs:
    name: Publish docs
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          make build

      - name: Build docs
        run: make docs

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: docs/_build/html
